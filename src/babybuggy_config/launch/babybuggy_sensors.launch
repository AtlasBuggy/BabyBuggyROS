<launch>
    <!-- sicktoolbox node  -->
    <!-- <node name="LIDAR" pkg="sicktoolbox_wrapper" type="sicklms" required="true">
        <param name="port" value="/dev/serial/by-id/usb-Prolific_Technology_Inc._USB-Serial_Controller-if00-port0" />
        <param name="baud" value="38400"/>
    </node>
	-->

    <!-- <node name="encoder" pkg="rosserial_python" type="serial_node.py" required="true">
        <param name="port" value="/dev/serial/by-id/usb-Silicon_Labs_CP2104_USB_to_UART_Bridge_Controller_00FEBA77-if00-port0"/>
    </node> -->

	<!--
    <node name="encoder" type="encoder_arduino_bridge_node" pkg="encoder_arduino_bridge" required="true" output="screen">
        <param name="~serial_port" type="string" value="/dev/serial/by-id/usb-Silicon_Labs_CP2104_USB_to_UART_Bridge_Controller_00FEBA77-if00-port0"/>
        <param name="~serial_baud" type="int" value="115200"/>
    </node>
	-->

    <node name="steering" pkg="rosserial_python" type="serial_node.py" required="true">
        <param name="port" value="/dev/serial/by-id/usb-Adafruit_Adafruit_Metro_328_ADAOLANOp-if00-port0"/>
    </node>

    <node name="sensor_board" pkg="sensor_parser" type="sensor_parser.py" required="false" output="screen"/>

    <node name="rf_receiver" pkg="rosserial_python" type="serial_node.py" output="screen">
        <param name="port" value="/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0"/>
    </node>

    <!-- <node name="joystick" pkg="joy" type="joy_node">
      <param name="joy_node/dev" value="/dev/input/js0"/>
    </node>
	-->

    <!-- <node pkg="babybuggy_manual_control" type="manual_controller.py" name="manual_controller" output="screen"/> -->

	<!--
    <node name="imu" type="bno055_arduino_bridge_node" pkg="bno055_arduino_bridge" required="true" output="screen">
        <param name="~serial_port" type="string" value="/dev/serial/by-id/usb-Silicon_Labs_CP2104_USB_to_UART_Bridge_Controller_00FEBA78-if00-port0"/>
        <param name="~serial_baud" type="int" value="115200"/>
    </node>
	-->

	<!--
    <node name="gps" type="gps_arduino_bridge_node" pkg="gps_arduino_bridge" required="true" output="screen">
        <param name="~serial_port" type="string" value="/dev/serial/by-id/usb-Silicon_Labs_CP2104_USB_to_UART_Bridge_Controller_00FEBA3D-if00-port0"/>
        <param name="~serial_baud" type="int" value="9600"/>
    </node>
	-->

  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode">
	  <param name="serial_port"         type="string" value="/dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0"/>
	  <param name="serial_baudrate"     type="int"    value="256000"/>
	  <param name="frame_id"            type="string" value="laser"/>
	  <param name="inverted"            type="bool"   value="false"/>
	  <param name="angle_compensate"    type="bool"   value="true"/>
  </node>

<!--  <include file="$(find realsense2_camera)/launch/rs_camera.launch"/>-->
  <!--<node pkg="vision" type="vision.py" name="vision" output="screen"/>-->
<!--  <node pkg="ros_deep_learning" type="segnet" name="segnet">-->
<!--      <remap from="segnet/image_in" to="camera/color/image_raw"/>-->
<!--      <rosparam>-->
<!--           model_name: fcn-resnet18-cityscapes-1024x512-->
<!--      </rosparam>-->
<!--  </node>-->
</launch>
